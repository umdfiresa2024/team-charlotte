---
title: "calulate_buffer_station_25"
format: html
editor: visual
---

## Quarto 

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
install.packages("tidyverse")
install.packages("terra")
```

You can add options to executable code like this

```{r}
#| echo: false
library("terra")
library("tidyverse")
```

```{r}
circles <- vect("buffer_light_rail.shp")


# get pm2.5 data for one month

path<-"/Users/paditya9/Library/CloudStorage/GoogleDrive-paditya9@umd.edu/Shared drives/2024 FIRE Light Rail/DATA/PM25/"
months<-dir(path) #makes a vector of folder names

# for each month
m <- 1

for (m in 118:length(months)) {
#for (m in 1:length(months)) {
  print(months[m])
  days<-dir(paste0(path,months[m])) #makes a vector of filenames within each folder
  
  # for each day in this month
  
  days_output<-c()
  for (d in 1:length(days)) {

    print(days[d])
    
    #read tif file
    r<-rast(paste0(path, months[m], "/", days[d]))
    
    #changes the crs system
    buffer_project<-terra::project(circles,  crs(r))
    
    #pts_buffer is the buffer around stations
    #crops raster to contain only buffers around stations
    int<-crop(r, buffer_project,
              snap="in",
              mask=TRUE)
    
    #convert cropped raster into dataframe and fine average value
    cntrl_df<-terra::extract(int, buffer_project, fun="mean", na.rm=TRUE)
    
    #rename columns
    names(cntrl_df)<-c("city_num","pm25")
    
    #create a dataframe date, shape index, and pm25
    output <- as.data.frame(c("date"=days[d], cntrl_df))
    
    #combine output with previous looop
    days_output<-rbind(days_output, output)

    
  }
  
}

```
