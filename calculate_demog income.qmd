---
title: "Calculate Affected Demographics"
format: html
editor: visual
---

In this document, you will calculate station-level PM2.5 changes. Afterward, you will calculate impacted demographic groups around each station.

# Calculating Station-Level Pollution Change

```{r}
library("tidyverse")
library("knitr")
```

Upload your team's full data frame required to estimate the impact of light rails on PM2.5 levels surrounding all stations. Below is a simplified example.

```{r}
df <-read.csv("station_pm_met_holiday_dataCombined_formatted.csv")

df2 <- df %>% mutate(date = as.Date(formatted_date,format = "%Y-%m-%d"))


startdate <- as.Date("2003-11-24",format = "%Y-%m-%d")

enddate <- as.Date("2011-11-24",format = "%Y-%m-%d")

opendate <- as.Date("2007-11-24",format = "%Y-%m-%d")

constructionstart <- as.Date("2005-02-26",format = "%Y-%m-%d")

#Clean Air Interstate Rule 
CAIR <- as.Date("2005-03-10",format = "%Y-%m-%d")

metroOpen_df <- df2 %>% filter(date >= startdate & date<=enddate)%>%
  mutate(MetroOpen = ifelse(date>=opendate,1,0))%>%
  mutate(construction = ifelse(date>=constructionstart & date<opendate,1,0))%>%
  group_by(station_ID)%>%
  arrange(station_ID,date)%>%
  mutate(lTair_f_tavg = lag(Tair_f_tavg))%>%
  mutate(duringCAIR = ifelse(date>=CAIR & date<= enddate,1,0))%>%
  mutate(lQair_f_tavg = lag(Qair_f_tavg)) %>%
  mutate(lPsurf_f_tavg = lag(Psurf_f_tavg)) %>%
  mutate(lWind_f_tavg = lag(Wind_f_tavg)) %>%
  mutate(t=as.numeric(date-startdate))%>%
  mutate(t2 = t^2,t3=t^3,t4=t^4)

```

Run stations level regressions. Use the best regression specification (in your team's opinion) from the average effect calculation.

```{r}

regression_stats <- summary(m1 <- lm(log(pm25)~MetroOpen:as.factor(station_ID)+construction+as.factor(day_of_week)+as.factor(month) + duringCAIR + Tair_f_tavg + Swnet_tavg + Lwnet_tavg + Qle_tavg + Qh_tavg + Snowf_tavg + Rainf_tavg + Qsm_tavg + SnowT_tavg + SWE_tavg + SnowDepth_tavg + Tair_f_tavg + Rainf_f_tavg + Wind_f_tavg + Qair_f_tavg + Psurf_f_tavg , data = metroOpen_df))

#not including parking as a factor because thanicha said parking will be taken into account anyways
```

The code below prints out the station-level effect and the p-values

```{r}

c<- coef(m1)
len_coef<-length(coef(m1))

#get coefficients of the station-level effect
coef<-coef(m1)[(len_coef-(26-1)): len_coef]

#get p values of the station-level effect (p<0.05 is statistically significant)
pval<-summary(m1)$coefficients[,4][(len_coef-3): len_coef]

kable(cbind(coef, pval), digits=2)
```

# Query demographic data

Helpful resource: <https://walker-data.com/tidycensus/articles/basic-usage.html>

Get census key

```{r}
library(tidycensus)
api_key <- "43a847b486e6474534b5e09d747e72ffd18f4ba2"


api_key <- "a7db1db93b5e9ba83fc6029eba22232d6a44c924"


census_api_key(api_key, install=TRUE, overwrite = T)
readRenviron("~/.Renviron")
```

Identify variables that you would like to query

```{r}

#using acs instead of decennial since decennial doesn't include income 
vars<-load_variables(year=2010, dataset="acs1", cache = TRUE)


write.csv(vars, "demographics_variable_acs.csv")
```

![](images/clipboard-9133593.png)

Query variables

```{r}

#vars range from less than 10k to more than 200k

targetvars <- c("B19001_001", "B19001_002", "B19001_003", "B19001_004", "B19001_005", 
                "B19001_006", "B19001_007", "B19001_008", "B19001_009", "B19001_010", 
                "B19001_011", "B19001_012", "B19001_013", "B19001_014", "B19001_015", 
                "B19001_016", "B19001_017")

income<-get_acs(geography = "tract", variables=targetvars, state="NC", county="Mecklenburg", output="wide", year = 2010) %>% select(-ends_with("M"))

#the variables that end in E are the estimates while the ones that end in M tell the margin of error.
income


```

Rename columns

```{r}
income_name<-income %>%
  rename(total = B19001_001E, 
       less_than_10k = B19001_002E, 
       `10k_to_15k` = B19001_003E, 
       `15k_to_20k` = B19001_004E, 
       `20k_to_25k` = B19001_005E, 
       `25k_to_30k` = B19001_006E, 
       `30k_to_35k` = B19001_007E, 
       `35k_to_40k` = B19001_008E, 
       `40k_to_45k` = B19001_009E, 
       `45k_to_50k` = B19001_010E, 
       `50k_to_60k` = B19001_011E, 
       `60k_to_75k` = B19001_012E, 
       `75k_to_100k` = B19001_013E, 
       `100k_to_125k` = B19001_014E, 
       `125k_to_150k` = B19001_015E, 
       `150k_to_200k` = B19001_016E, 
       `200k_or_more` = B19001_017E)
```

# Calculate affected demographic group

```{r}
library("terra")
```

```{r}
buff<-vect("Buffer Light Rail/new_buffer_light_rail.shp")
plot(buff)
```

Download shapefiles from [tigris package](https://github.com/walkerke/tigris)

```{r}
shape<-tigris::tracts(state="NC", county="Mecklenburg", class="sp", year=2010)
shapevect<-vect(shape)
shapedf<-as.data.frame(shape)
```

```{r}
tract_income<-merge(shapevect, income_name, by.x="GEOID10", by.y="GEOID")

tract_income$tract_area<-expanse(tract_income, unit="m")

tract_income_df<-as.data.frame(tract_income)

summary(tract_income_df)

#100 percent match
```

Intersect blocks with buffers

```{r}

buffdf <- as.data.frame(buff)

output <- c()

for(i in 0:25){
  print(i)

buff2 <- subset(buff,buff$FID ==i)

int<-crop(tract_income, buff2)

int$intarea<-expanse(int, unit="m")



intdf<-as.data.frame(int)%>%

  mutate(frac_area=intarea/tract_area) %>%
  mutate(total=total*frac_area, 
         
         
         
        `less_than_10k` = `less_than_10k` * frac_area,
`10k_to_15k` = `10k_to_15k` * frac_area,
`15k_to_20k` = `15k_to_20k` * frac_area,
`20k_to_25k` = `20k_to_25k` * frac_area,
`25k_to_30k` = `25k_to_30k` * frac_area,
`30k_to_35k` = `30k_to_35k` * frac_area,
`35k_to_40k` = `35k_to_40k` * frac_area,
`40k_to_45k` = `40k_to_45k` * frac_area,
`45k_to_50k` = `45k_to_50k` * frac_area,
`50k_to_60k` = `50k_to_60k` * frac_area,
`60k_to_75k` = `60k_to_75k` * frac_area,
`75k_to_100k` = `75k_to_100k` * frac_area,
`100k_to_125k` = `100k_to_125k` * frac_area,
`125k_to_150k` = `125k_to_150k` * frac_area,
`150k_to_200k` = `150k_to_200k` * frac_area,
`200k_or_more` = `200k_or_more` * frac_area
         
         ) %>%
  summarize(total=sum(total), 
            
            
            `less_than_10k` = sum(`less_than_10k`),
`10k_to_15k` = sum(`10k_to_15k`),
`15k_to_20k` = sum(`15k_to_20k`),
`20k_to_25k` = sum(`20k_to_25k`),
`25k_to_30k` = sum(`25k_to_30k`),
`30k_to_35k` = sum(`30k_to_35k`),
`35k_to_40k` = sum(`35k_to_40k`),
`40k_to_45k` = sum(`40k_to_45k`),
`45k_to_50k` = sum(`45k_to_50k`),
`50k_to_60k` = sum(`50k_to_60k`),
`60k_to_75k` = sum(`60k_to_75k`),
`75k_to_100k` = sum(`75k_to_100k`),
`100k_to_125k` = sum(`100k_to_125k`),
`125k_to_150k` = sum(`125k_to_150k`),
`150k_to_200k` = sum(`150k_to_200k`),
`200k_or_more` = sum(`200k_or_more`)
            
            
            
            ) %>%
  mutate(
    
    
   `pct_less_than_10k` = `less_than_10k` * 100 / `total`,
`pct_10k_to_15k` = `10k_to_15k` * 100 / `total`,
`pct_15k_to_20k` = `15k_to_20k` * 100 / `total`,
`pct_20k_to_25k` = `20k_to_25k` * 100 / `total`,
`pct_25k_to_30k` = `25k_to_30k` * 100 / `total`,
`pct_30k_to_35k` = `30k_to_35k` * 100 / `total`,
`pct_35k_to_40k` = `35k_to_40k` * 100 / `total`,
`pct_40k_to_45k` = `40k_to_45k` * 100 / `total`,
`pct_45k_to_50k` = `45k_to_50k` * 100 / `total`,
`pct_50k_to_60k` = `50k_to_60k` * 100 / `total`,
`pct_60k_to_75k` = `60k_to_75k` * 100 / `total`,
`pct_75k_to_100k` = `75k_to_100k` * 100 / `total`,
`pct_100k_to_125k` = `100k_to_125k` * 100 / `total`,
`pct_125k_to_150k` = `125k_to_150k` * 100 / `total`,
`pct_150k_to_200k` = `150k_to_200k` * 100 / `total`,
`pct_200k_or_more` = `200k_or_more` * 100 / `total`
    
    
    
    )%>% mutate(FID = i)
output <- rbind(output,intdf)
}
  
  output
```

Summarize demographic groups that live near light rail stations

```{r}
sum_demog<-output %>%
  #combinging all the station's data together
  summarize(
    total = sum(total),
   `less_than_10k` = sum(`less_than_10k`),
`10k_to_15k` = sum(`10k_to_15k`),
`15k_to_20k` = sum(`15k_to_20k`),
`20k_to_25k` = sum(`20k_to_25k`),
`25k_to_30k` = sum(`25k_to_30k`),
`30k_to_35k` = sum(`30k_to_35k`),
`35k_to_40k` = sum(`35k_to_40k`),
`40k_to_45k` = sum(`40k_to_45k`),
`45k_to_50k` = sum(`45k_to_50k`),
`50k_to_60k` = sum(`50k_to_60k`),
`60k_to_75k` = sum(`60k_to_75k`),
`75k_to_100k` = sum(`75k_to_100k`),
`100k_to_125k` = sum(`100k_to_125k`),
`125k_to_150k` = sum(`125k_to_150k`),
`150k_to_200k` = sum(`150k_to_200k`),
`200k_or_more` = sum(`200k_or_more`)
            
            
            )%>%
  mutate(
    
      `pct_less_than_10k` = `less_than_10k` * 100 / `total`,
`pct_10k_to_15k` = `10k_to_15k` * 100 / `total`,
`pct_15k_to_20k` = `15k_to_20k` * 100 / `total`,
`pct_20k_to_25k` = `20k_to_25k` * 100 / `total`,
`pct_25k_to_30k` = `25k_to_30k` * 100 / `total`,
`pct_30k_to_35k` = `30k_to_35k` * 100 / `total`,
`pct_35k_to_40k` = `35k_to_40k` * 100 / `total`,
`pct_40k_to_45k` = `40k_to_45k` * 100 / `total`,
`pct_45k_to_50k` = `45k_to_50k` * 100 / `total`,
`pct_50k_to_60k` = `50k_to_60k` * 100 / `total`,
`pct_60k_to_75k` = `60k_to_75k` * 100 / `total`,
`pct_75k_to_100k` = `75k_to_100k` * 100 / `total`,
`pct_100k_to_125k` = `100k_to_125k` * 100 / `total`,
`pct_125k_to_150k` = `125k_to_150k` * 100 / `total`,
`pct_150k_to_200k` = `150k_to_200k` * 100 / `total`,
`pct_200k_or_more` = `200k_or_more` * 100 / `total`
    
    )

kable(sum_demog, digits=2)
```

Merge station-level demographic data with station-level pollution reduction data.

```{r}
everything <- cbind(output,coef)
```

Calculate the average emissions that each demographic group sees by using the formula below:

$\dfrac{Hisp_{area1} \times Reduction_{area1} + Hisp_{area2} \times Reduction_{area2}}{Hisp_{area1} + Hisp_{area2}}$

```{r}

reduction_benefit <- everything%>%
  mutate(
    #multiplying number of people in demographic by change in pollution caused by light rail
    total_change = total*coef,
    `less_than_10k_change` = `less_than_10k` * `coef`,
`10k_to_15k_change` = `10k_to_15k` * `coef`,
`15k_to_20k_change` = `15k_to_20k` * `coef`,
`20k_to_25k_change` = `20k_to_25k` * `coef`,
`25k_to_30k_change` = `25k_to_30k` * `coef`,
`30k_to_35k_change` = `30k_to_35k` * `coef`,
`35k_to_40k_change` = `35k_to_40k` * `coef`,
`40k_to_45k_change` = `40k_to_45k` * `coef`,
`45k_to_50k_change` = `45k_to_50k` * `coef`,
`50k_to_60k_change` = `50k_to_60k` * `coef`,
`60k_to_75k_change` = `60k_to_75k` * `coef`,
`75k_to_100k_change` = `75k_to_100k` * `coef`,
`100k_to_125k_change` = `100k_to_125k` * `coef`,
`125k_to_150k_change` = `125k_to_150k` * `coef`,
`150k_to_200k_change` = `150k_to_200k` * `coef`,
`200k_or_more_change` = `200k_or_more` * `coef`
    
    )%>%
  #summing impact across all stations
  summarize(total_change_sum=sum(total_change),
            total_pop = sum(total),
            `less_than_10k_change_sum` = sum(`less_than_10k_change`),
`10k_to_15k_change_sum` = sum(`10k_to_15k_change`),
`15k_to_20k_change_sum` = sum(`15k_to_20k_change`),
`20k_to_25k_change_sum` = sum(`20k_to_25k_change`),
`25k_to_30k_change_sum` = sum(`25k_to_30k_change`),
`30k_to_35k_change_sum` = sum(`30k_to_35k_change`),
`35k_to_40k_change_sum` = sum(`35k_to_40k_change`),
`40k_to_45k_change_sum` = sum(`40k_to_45k_change`),
`45k_to_50k_change_sum` = sum(`45k_to_50k_change`),
`50k_to_60k_change_sum` = sum(`50k_to_60k_change`),
`60k_to_75k_change_sum` = sum(`60k_to_75k_change`),
`75k_to_100k_change_sum` = sum(`75k_to_100k_change`),
`100k_to_125k_change_sum` = sum(`100k_to_125k_change`),
`125k_to_150k_change_sum` = sum(`125k_to_150k_change`),
`150k_to_200k_change_sum` = sum(`150k_to_200k_change`),
`200k_or_more_change_sum` = sum(`200k_or_more_change`),

#sums together populations of different income brackets across the stations
`less_than_10k` = sum(`less_than_10k`),
`10k_to_15k` = sum(`10k_to_15k`),
`15k_to_20k` = sum(`15k_to_20k`),
`20k_to_25k` = sum(`20k_to_25k`),
`25k_to_30k` = sum(`25k_to_30k`),
`30k_to_35k` = sum(`30k_to_35k`),
`35k_to_40k` = sum(`35k_to_40k`),
`40k_to_45k` = sum(`40k_to_45k`),
`45k_to_50k` = sum(`45k_to_50k`),
`50k_to_60k` = sum(`50k_to_60k`),
`60k_to_75k` = sum(`60k_to_75k`),
`75k_to_100k` = sum(`75k_to_100k`),
`100k_to_125k` = sum(`100k_to_125k`),
`125k_to_150k` = sum(`125k_to_150k`),
`150k_to_200k` = sum(`150k_to_200k`),
`200k_or_more` = sum(`200k_or_more`)

            
            
            ) %>%
  #ave variables are the amount of change in pollution an individual of that demographic would recieve on average
    mutate(total_change_average=total_change_sum/total_pop,
           
      `less_than_10k_average` = `less_than_10k_change_sum` / `less_than_10k`,
`10k_to_15k_average` = `10k_to_15k_change_sum` / `10k_to_15k`,
`15k_to_20k_average` = `15k_to_20k_change_sum` / `15k_to_20k`,
`20k_to_25k_average` = `20k_to_25k_change_sum` / `20k_to_25k`,
`25k_to_30k_average` = `25k_to_30k_change_sum` / `25k_to_30k`,
`30k_to_35k_average` = `30k_to_35k_change_sum` / `30k_to_35k`,
`35k_to_40k_average` = `35k_to_40k_change_sum` / `35k_to_40k`,
`40k_to_45k_average` = `40k_to_45k_change_sum` / `40k_to_45k`,
`45k_to_50k_average` = `45k_to_50k_change_sum` / `45k_to_50k`,
`50k_to_60k_average` = `50k_to_60k_change_sum` / `50k_to_60k`,
`60k_to_75k_average` = `60k_to_75k_change_sum` / `60k_to_75k`,
`75k_to_100k_average` = `75k_to_100k_change_sum` / `75k_to_100k`,
`100k_to_125k_average` = `100k_to_125k_change_sum` / `100k_to_125k`,
`125k_to_150k_average` = `125k_to_150k_change_sum` / `125k_to_150k`,
`150k_to_200k_average` = `150k_to_200k_change_sum` / `150k_to_200k`,
`200k_or_more_average` = `200k_or_more_change_sum` / `200k_or_more`
)

final_result <- reduction_benefit %>%
  select(total_change_average,`less_than_10k_average`, `10k_to_15k_average`, `15k_to_20k_average`, `20k_to_25k_average`, `25k_to_30k_average`, `30k_to_35k_average`, `35k_to_40k_average`, `40k_to_45k_average`, `45k_to_50k_average`, `50k_to_60k_average`, `60k_to_75k_average`, `75k_to_100k_average`, `100k_to_125k_average`, `125k_to_150k_average`, `150k_to_200k_average`, `200k_or_more_average`
)


kable(final_result,digits = 2)
final_result <- reduction_benefit %>%
  select(`less_than_10k_average`, `10k_to_15k_average`, `15k_to_20k_average`, `20k_to_25k_average`, `25k_to_30k_average`, `30k_to_35k_average`, `35k_to_40k_average`, `40k_to_45k_average`, `45k_to_50k_average`, `50k_to_60k_average`, `60k_to_75k_average`, `75k_to_100k_average`, `100k_to_125k_average`, `125k_to_150k_average`, `150k_to_200k_average`, `200k_or_more_average`
)
income_groups <-  c(
  "<10k",
  "10k-15k",
  "15k-20k",
  "20k-25k",
  "25k-30k",
  "30k-35k",
  "35k-40k",
  "40k-45k",
  "45k-50k",
  "50k-60k",
  "60k-75k",
  "75k-100k",
  "100k-125k",
  "125k-150k",
  "150k-200k",
  ">200k"
)




plot_table <- t(final_result)
# colnames(plot_table) = "pollution reduction per person (as a result of metro opening )"

plot_table <- cbind(income_groups, t(final_result))

plot_table = as.data.frame(plot_table)

plot_table$V2 <- as.numeric(plot_table$V2)

# plot_table$income_groups <- as.factor(plot_table$income_groups)

plot_table$income_groups <- factor(plot_table$income_groups, levels = income_groups)

png("average_income_change.png", width = 1000, height = 600, units = "px" )
plot <- ggplot(data = plot_table, aes(x = income_groups, y = V2)) + 
  geom_bar(stat = "identity", position = "dodge", fill = "#88a6ff", color = "#9e9e9e") +
  expand_limits(y = c(-0.3, 0)) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Adjust x-axis text size
    axis.text.y = element_text(size = 10),  # Adjust y-axis text size
    axis.title.x = element_text(size = 12),  # Adjust x-axis title size
    axis.title.y = element_text(size = 12),  # Adjust y-axis title size
    plot.title = element_text(size = 14)  # Adjust plot title size
  )+
  labs(
    x = "Income Groups",
    y = "Average Pollution Change",  # Add y-axis label
  )

# Print the plot
print(plot)
dev.off()

#all income groups seem to be getting a similar pollution reduction benefit on the individual level.
```
